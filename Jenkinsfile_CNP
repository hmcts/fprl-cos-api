#!groovy
import uk.gov.hmcts.contino.AppPipelineDsl

properties([
  [$class: 'GithubProjectProperty', projectUrlStr: 'https://github.com/hmcts/fprl-cos-api.git'],
  pipelineTriggers([[$class: 'GitHubPushTrigger']])
])

@Library("Infrastructure")

def type = "java"
def product = "fprl"
def component = "cos"

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

def secrets = [
  'fprl-${env}': []
]

// Vars for Kubernetes
env.PACT_BROKER_FULL_URL = 'https://pact-broker.platform.hmcts.net'

withPipeline(type, product, component) {
  loadVaultSecrets(secrets)
  enableAksStagingDeployment()
  disableLegacyDeployment()

  after('checkout') {
    echo 'fprl-cos-api checked out'
  }

  after('test') {
    steps.junit '**/test-results/**/*.xml'
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'build/reports/**/*'
  }

  before('functionalTest:aat') {
    env.test_environment = 'aat'
  }

  after('functionalTest:aat') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'build/reports/**/*'
  }

  // Kubernetes does not retrieve variables from the output terraform
  before('functionalTest:preview') {
    env.test_environment = 'aat'
  }

  after('functionalTest:preview') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'build/reports/**/*'
  }

  onMaster() {
    enablePactAs([AppPipelineDsl.PactRoles.CONSUMER])
  }
}
